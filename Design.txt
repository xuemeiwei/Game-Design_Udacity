Hangman Design

This project is based on the framework of FSND-P4-Design-A-Game. In this project the word guess game called Hangman is designed. In Hangman game the word to guess is represented by a row of dashes, representing each letter of the word. If the guessing player suggests a letter which occurs in the word, the other player writes it in all its correct positions. If the suggested letter or number does not occur in the word, the other player draws one element of a hanged man stick figure as a tally mark. The player guessing the word may, at any time, attempt to guess the whole word. If the word is correct, the game is over and the guesser wins. 

The details about Hangman can be found on wikipedia:
https://en.wikipedia.org/wiki/Hangman_(game)

Same as the framework of FSND-P4-Design-A-Game, three Classes, namely User, Game and Score are defined in the models.py. However in order to sort the scores of different users, two more properties of User are defined which are wins and total_games_played. The function of “get_user_rankings” is based on the win percentage of each user and the percentage is computed as wins/total_games_played. 

When a new game is created the word to guess is created. Here the library of the words is a given list containing just several words and the word to guess is randomly chose from this list. The library can also be a very large dictionary imported outside. 

The main feature of the game is to guess a word letter by letter which is mainly displayed in the “make_move” function in application.py. If the letter given by the user is correct the positions of letter will be given in the message which can help the user to guess the following letters. Otherwise it will tell the user that the letter is not in the answer.

The trade-off between the designed game and original game is that the player can only guess the word letter by letter instead of the whole word. So even the player wants to give the guess of the whole word he still needs to guess letter by letter.